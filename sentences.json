[
  "Alright guys, welcome back!",
  "Welcome back to another exciting episode of Drive with Me.",
  "In this video, we will talk about monolith versus microservices architecture.",
  "We will understand what a monolith architecture is and what a microservices architecture is.",
  "We will discuss their trade-offs and what you should use.",
  "Let’s start with monolithic architecture.",
  "Mono means one.",
  "In monolith architecture, all backend code is stored in a single repository.",
  "For example, in an e-commerce app, authentication, orders, payments, and product code are all in one place.",
  "You push all your code to one repository.",
  "You deploy the entire code on one server.",
  "The server is up and running.",
  "As your application scales, this one server becomes a bottleneck.",
  "One server cannot handle all requests.",
  "To solve this, we do horizontal scaling by adding more servers.",
  "You add more servers to handle the load.",
  "This works but there are problems.",
  "If there is a bug in authentication code, the whole server can crash.",
  "This means all services like authentication, orders, and payments go down.",
  "This is not a good architecture.",
  "Ideally, if authentication fails, only authentication should stop working.",
  "The monolith has no segregation of services.",
  "Also, over time, the code becomes complex and hard to manage.",
  "The pro is that monolith is easy to manage with one server and one codebase.",
  "The con is that it has a single point of failure.",
  "The solution is to segregate services into separate servers.",
  "This is called microservices architecture.",
  "Each feature becomes its own independent microservice.",
  "Authentication is one service, orders another, payments another.",
  "Managing many servers and repositories is harder.",
  "You need a team of developers.",
  "The cost of servers increases because you run multiple servers.",
  "But microservices have many advantages.",
  "You can scale services independently.",
  "For example, you can scale payment service without scaling authentication.",
  "There is no single point of failure.",
  "If authentication service goes down, other services keep running.",
  "Monitoring services is easier because you monitor each one separately.",
  "You can have different teams working on different services.",
  "Code is cleaner and more reusable.",
  "Google’s authentication system is one service used by many products.",
  "Microservices architecture is great when you have a decent sized team and need to scale.",
  "If you are a solo founder with fewer users, monolith works fine.",
  "When you reach millions of users and uptime is critical, move to microservices.",
  "Start your app with monolith architecture.",
  "Monolith just works for many cases.",
  "Microservices are good at scale but harder to manage.",
  "Thanks for watching this video about microservices vs monolith.",
  "I hope you understood these concepts.",
  "Please like and subscribe if you liked the video.",
  "See you in the next video, bye bye and take care!"
]
